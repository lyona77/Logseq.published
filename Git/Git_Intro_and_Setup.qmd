---
title: "Git for Version Control: Intro"
author: "Lingyan Yu"
date: "`r Sys.Date()`"
version: "1.0"
status: "Complete Draft"
output: 
   html:
      toc: true
      toc_float: true
      number_sections: true
---

## History of Version Control Systems

Starting from the 80s

Modern Distributed Systems: Git, Mercurial, etc.
  
## Git vocabs

- Repo: (remote/local) repository
- Branch: main branch
  
## Github: Git platform

Github enterprise: <http://github.umn.edu/>
  
## Git Setup Workflow

*Notes*: All codes are run on Terminal.

1. Installation

   1. **Download Git**: Visit the [Git website](https://git-scm.com/) and download the installer for your operating system.
   2. **Install Git**: Run the installer and follow the on-screen instructions.

2. Configuration

   1. **Open Terminal**: Open your terminal or command prompt.
   2. **Set User Info**: Configure your Git username and email.

      ```bash
      git config --global user.name "Your Name"
      git config --global user.email "youremail@example.com"
      ```

      If just for the session, remove `--global`.

   3. (Optional) Configure your default text editor to VS Code (and many other options).
      Install "code" from VSCode commander by pressing `Cmd + Shift + P` and typing `Shell Command: Install 'code' command in PATH`.  
      Then, run the following command in Terminal:

      ```bash
      git config --global core.editor "code --wait"
      ```

      You may check with `git config --global -e`.

3. (Optional Best Practices) Set up ssh key pair between a machine and a GitHub account for secure connections. 

   1. **Generate SSH Key**: Generate an SSH key on your local machine.  

      ```bash
      ssh-keygen -t rsa -b 4096 -C "
      ```

   2. **Add SSH Key to GitHub**
      1. Copy the SSH key to your clipboard.

         ```bash
         cat ~/.ssh/id_rsa.pub
         ```

      2. Then, add it to your GitHub account under SSH keys in settings.

   3. **Test the SSH connection**

      ```bash
      ssh -T git@github.com
      ```

   4. **Clone Remote Repository**: Navigate to the folder where you want to clone the repository and run.  

      ```bash
      git clone git@github.com:username/repository.git
      ```

4. Create or navigate to a local folder for all your Git repositories.
   
5-1. **Clone Remote Repository**: Use ssh or http links as applicable. 

   ```bash
   git clone git@github.com:username/repository.git
   ```
5-2. **Create a New Repository Based on a Local Folder**  

   Move the (project) folder into the local repository folder. Then, navigate to the local repository folder and run `git init`.

## Workflow

- Only the local "clone" copies will be modified when you save your changes. If you stage and commit a "batch" of your changes to Git, it will updated your local git file history with the new commit as the most recent "official" version. These two steps will not affect any remote copies.
- To merge your changes into the remote master branch, you will need to "git push" the local git history either on Terminal or via a Git desktop GUI.

## Git Resources

- Access documentation for Git commands by typing `git <command> -h` for help.
  - Remember the ":" is a prompt waiting for commands and you can press "Q" to exit the manual.
- [Git Intro curated by Software Carpentry](https://swcarpentry.github.io/git-novice/)
- LATIS offered a synchronous Git workshop earlier this month, so we just missed it. There may be internal resources for students working at LATIS. They most likely will offer it again next semester as well.
- [Minnesota Supercomputing Institute (MSI) Youtube channel](https://www.youtube.com/@UofMMSI/featured): recordings of previous tutorials
  - [Introduction to Version Control and Git](https://www.youtube.com/watch?v=cbb_MWE2QPI)
  - [Github and Collaboration using Git](https://www.youtube.com/watch?v=mfyBKEpwnoM)
- External resources for exploration
  - [Learn Git Branching](https://learngitbranching.js.org/?locale=en_US): a visual and interactive way to learn Git on the web
  - Tutorials offered by Git Desktop GUI, e.g. [Git Tutorials - GitKraken](https://www.gitkraken.com/learn/git/tutorials)
    Be aware that GitKraken is not free. It does offer free Git tutorials though. There are several free GUI options out there as well - should you prefer the traditional application view over Terminal.
  - And ChatGPT!  
